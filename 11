#include <stdio.h>
#include <malloc.h>

int powt(int x, int *a, int n ){
    int flag = 0;
    for(int i =0; i < n; i++){
        if(x == *(a+i) && flag == 0)
            flag = 1;
        else if(x == *(a + i) && flag == 1){
            flag = -1;
        }
    }
    if(flag == 1)
        return 1;
    else if(flag == 0)
        return 0;
}


int main() {
    int *a, *b, j=0, n;
    scanf_s("%d", &n);
    a = (int*) malloc(n*sizeof(int));
    b = (int*) malloc(n*sizeof(int));
    for(int i = 0 ; i < n; i++){
        scanf_s("%d", a+i);
    }


    for(int i = 0 ; i < n; i++){
        if(powt(*(a+i), a, n ) == 1){
            *(b+j) = *(a+i);
            j++;
        }
        else if(powt(*(a+i), b, n ) == 0){
            *(b+j) = *(a+i);
            j++;
        }

    }

    for(int i = 0 ; i < j; i++)
        printf("%d\n",*(b+i));

    free(a);
    return 0;

}
